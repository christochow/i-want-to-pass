{"version":3,"sources":["components/CourseComponent.js","pages/MainPage.js","helper/calculator.js","components/GradeComponent.js","pages/CalculatorPage.js","App.js","helper/store.js","serviceWorker.js","index.js"],"names":["CourseComponent","props","history","useHistory","style","margin","textAlign","paddingLeft","Button","color","backgroundColor","width","marginRight","onClick","push","pathname","state","course","name","marginTop","callback","MainPage","removeCallback","index","removeCourse","padding","height","this","map","e","ind","key","length","Component","withRouter","connect","dispatch","data","type","calculator","calculateRequired","termGrade","examPercentage","gradeWanted","needed","Math","ceil","calculateGrade","mark","outOf","round","GradeComponent","onMarkChange","isNaN","parseInt","target","value","setState","onOutOfChange","onPercentageChange","percentage","onSubmit","preventDefault","grade","editing","onNameChange","deleteCallback","TextField","marginLeft","inputProps","className","classes","input","InputLabelProps","label","required","defaultValue","onChange","step","min","max","toString","cancelCallback","withStyles","CalculatorPage","dirty","courseWork","reduce","a","b","newCourse","saved","valid","calculated","newCourseWorkCallback","newEditing","newCourseWork","splice","total","updateCourseWorkCallback","saveCourse","addCourse","updateCourse","undefined","numberInputProps","goBack","disabled","onGradeChange","ownProps","courseName","location","find","App","path","cookies","Cookies","initialState","get","createStore","action","newCourses","newState1","set","JSON","stringify","courses","findIndex","newState2","courses1","newState3","Boolean","window","hostname","match","theme","createMuiTheme","palette","primary","main","grey","secondary","status","danger","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f4fd131.chunk.js","sourcesContent":["import React from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction CourseComponent(props) {\n    let history = useHistory();\n\n    return (\n        <div style={{margin: '10px', textAlign: 'center', paddingLeft: '6%'}}>\n            <Button\n                color='secondary'\n                style={{backgroundColor: 'white', width: '155px', marginRight: '10px'}}\n                onClick={() => history.push({\n                    pathname: '/course',\n                    state: {course: props.course}\n                })}>{props.course.name}</Button>\n            <Button style={{marginTop: '5px'}} onClick={() => props.callback()}>Delete</Button>\n        </div>\n    );\n}\n\nexport default CourseComponent;\n","import React, {Component} from 'react';\nimport {Button} from \"@material-ui/core\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport CourseComponent from \"../components/CourseComponent\";\n\nclass MainPage extends Component {\n\n    onClick = () => {\n        this.props.history.push('/course')\n    };\n\n    removeCallback = (index) => () => {\n        this.props.removeCourse(index)\n    };\n\n    render() {\n        return (\n            <div style={{padding: '2vh'}}>\n                <div style={{height: '25vh'}}/>\n                <h2>I Want To Pass</h2>\n                <p>Calculate how much you need to get on the final exam to pass a course :)</p>\n                <Button color=\"primary\" onClick={this.onClick}>Add a new course</Button>\n                <h3>Saved courses</h3>\n                {this.props.course.map((e, ind) => (\n                    <CourseComponent key={ind} callback={this.removeCallback(ind)} course={e}/>))}\n                {this.props.course.length === 0 && 'No saved course at the moment...'}\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = (state) => state;\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeCourse: (data) => dispatch({index: data, type: 'removeCourse'})\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainPage));\n","let calculator = {\n    calculateRequired: (termGrade, examPercentage, gradeWanted) => {\n        examPercentage = examPercentage / 100;\n        let needed = Math.ceil((gradeWanted - termGrade * (1 - examPercentage)) / (examPercentage));\n        if (needed > 100.0) {\n            return -1;\n        }\n        return needed;\n    },\n    calculateGrade: (mark, outOf) => {\n        if (outOf === 0) {\n            return 0;\n        }\n        return Math.round(mark * 100 / outOf);\n    }\n};\n\nexport default calculator\n","import React, {Component} from 'react';\nimport {TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport calculator from \"../helper/calculator\";\n\nconst styles = {\n    input: {\n        color: 'white'\n    },\n    label: {\n        color: 'white'\n    }\n};\n\nclass GradeComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...this.props.course,\n            editing: this.props.editing\n        }\n    }\n\n    onMarkChange = (e) => {\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        this.setState({\n            ...this.state,\n            mark: parseInt(e.target.value),\n        })\n    };\n\n    onOutOfChange = (e) => {\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        this.setState({\n            ...this.state,\n            outOf: parseInt(e.target.value),\n        })\n    };\n\n    onPercentageChange = (e) => {\n        if (e.target.value > 100 || e.target.value < 0) {\n            return;\n        }\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        this.setState({\n            ...this.state,\n            percentage: parseInt(e.target.value),\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        let grade = calculator.calculateGrade(this.state.mark, this.state.outOf);\n        this.setState({\n            ...this.state,\n            grade,\n            editing: false\n        });\n        this.props.callback({\n            name: this.state.name,\n            grade,\n            mark: this.state.mark,\n            outOf: this.state.outOf,\n            percentage: this.state.percentage\n        });\n    };\n\n    onNameChange = (e) => {\n        this.setState({\n            ...this.state,\n            name: e.target.value\n        })\n    };\n\n    render() {\n        return (\n            <div style={{margin: '15px'}}>\n                {!this.state.editing && <div>\n                    {this.props.index}. Name: {this.state.name}, Grade: {this.state.grade}, Weighting: {this.state.percentage}%\n                    <Button onClick={() => this.setState({...this.state, editing: true})}>\n                        Edit\n                    </Button>\n                    <Button onClick={() => this.props.deleteCallback()}>\n                        Delete\n                    </Button>\n                </div>}\n                {this.state.editing && <form onSubmit={this.onSubmit}>\n                    <label style={{color: \"white\"}}>\n                        Name:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"string\"\n                            required\n                            defaultValue={this.props.course.name}\n                            onChange={this.onNameChange}\n                        />\n                    </label>\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\n                        Mark:\n                        <TextField\n                            style={{width: '50px', marginLeft: \"5px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                                step: 'any',\n                                min: 0,\n                                max: this.state.outOf\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            defaultValue={this.props.course.mark.toString()}\n                            onChange={this.onMarkChange}\n                        />\n                    </label>\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\n                        Out Of:\n                        <TextField\n                            style={{width: '50px', marginLeft: \"5px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                                min: 1,\n                                step: 'any'\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            defaultValue={this.props.course.outOf.toString()}\n                            onChange={this.onOutOfChange}\n                        />\n                    </label>\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\n                        Weighting:\n                        <TextField\n                            style={{width: '50px', marginLeft: \"5px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                                step: 'any',\n                                min: 1,\n                                max: 100\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            defaultValue={this.props.course.percentage.toString()}\n                            onChange={this.onPercentageChange}\n                        />\n                        %\n                    </label>\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} type=\"submit\"\n                            color=\"secondary\">Save</Button>\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}}\n                            onClick={() => this.props.cancelCallback ?\n                                this.props.cancelCallback() :\n                                this.setState({...this.props.course, editing: false})}\n                            color=\"secondary\">Cancel</Button>\n                </form>}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(GradeComponent);\n","import React, {Component} from 'react';\nimport {TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport calculator from \"../helper/calculator\";\nimport GradeComponent from \"../components/GradeComponent\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst styles = {\n    input: {\n        color: 'white'\n    },\n    label: {\n        color: 'white'\n    }\n};\n\n\nclass CalculatorPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: this.props.course ? this.props.course : {\n                name: '',\n                grade: 0,\n                percentage: 0.0,\n                needed: 0,\n                courseWork: []\n            },\n            valid: true,\n            editing: [],\n            calculated: false,\n            dirty: false,\n            saved: !(this.props.course === undefined)\n        };\n        this.numberInputProps = {\n            className: this.props.classes.input,\n            step: 'any',\n            min: 0,\n            max: 100\n        };\n    }\n\n    onPercentageChange = (e) => {\n        if (e.target.value > 100 || e.target.value < 0) {\n            return;\n        }\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        let course = {...this.state.course, percentage: parseInt(e.target.value)};\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        })\n    };\n    onNameChange = (e) => {\n        let course = {...this.state.course, name: e.target.value};\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        })\n    };\n\n    onSubmit = () => {\n        let valid = this.state.course.courseWork.reduce((a, b) => a + b.percentage, 0) + this.state.course.percentage === 100;\n        if (!valid) {\n            this.setState({\n                ...this.state,\n                valid: false,\n                calculated: true\n            });\n            return;\n        }\n        let course = this.state.course;\n        let needed = calculator.calculateRequired(course.grade, course.percentage, 50);\n        let newCourse = {...course, needed};\n        this.setState({\n            ...this.state,\n            course: newCourse,\n            saved: true,\n            valid: true,\n            calculated: true,\n            dirty: true\n        })\n    };\n\n    newCourseWorkCallback = (index) => (courseWork) => {\n        let newEditing = [...this.state.editing];\n        let newCourseWork = [...this.state.course.courseWork];\n        newCourseWork.push(courseWork);\n        newEditing.splice(index, 1);\n        let course = {...this.state.course};\n        course.courseWork = newCourseWork;\n        let total = course.courseWork.reduce((a, b) => a + b.percentage, 0);\n        let grade = newCourseWork.reduce((a, b) => a + b.grade * b.percentage, 0) / total;\n        if (!isNaN(grade)) {\n            course.grade = Math.round(grade);\n        }\n        this.setState({\n            ...this.state,\n            course,\n            editing: newEditing,\n            dirty: true\n        });\n    };\n\n    updateCourseWorkCallback = (index) => (courseWork) => {\n        let newCourseWork = [...this.state.course.courseWork];\n        newCourseWork[index] = courseWork;\n        let course = {...this.state.course};\n        course.courseWork = newCourseWork;\n        let total = course.courseWork.reduce((a, b) => a + b.percentage, 0);\n        let grade = newCourseWork.reduce((a, b) => a + b.grade * b.percentage, 0) / total;\n        if (!isNaN(grade)) {\n            course.grade = Math.round(grade);\n        }\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        });\n    };\n\n    deleteCallback = (index) => () => {\n        let newCourseWork = [...this.state.course.courseWork];\n        newCourseWork.splice(index, 1);\n        let course = {...this.state.course};\n        course.courseWork = newCourseWork;\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        });\n    };\n\n    saveCourse = (e) => {\n        e.preventDefault();\n        let needToSave = !this.state.saved;\n        needToSave ? this.props.addCourse(this.state.course) : this.props.updateCourse(this.state.course);\n        this.setState({\n            ...this.state,\n            saved: true,\n            dirty: false\n        });\n    };\n\n    cancelCallback = index => () => {\n        let newEditing = [...this.state.editing];\n        newEditing.splice(index, 1);\n        this.setState({\n            ...this.state,\n            editing: newEditing\n        });\n    };\n\n    render() {\n        return (\n            <div style={{padding: '2vh'}}>\n                <div style={{textAlign: 'right'}}>\n                    {(!this.state.saved || this.state.dirty) && 'Unsaved Changes'}\n                    <Button\n                        color='secondary'\n                        onClick={() => this.props.history.goBack()}\n                        style={{backgroundColor: 'white', margin: '10px'}}>\n                        Back To Main Page\n                    </Button>\n                </div>\n                <div style={{height: '25vh'}}/>\n                {this.state.calculated && this.state.valid && this.state.course.needed >= 0 &&\n                <h2>You need {this.state.course.needed}% on the exam to pass the course</h2>}\n                {this.state.calculated && this.state.valid && this.state.course.needed < 0\n                && <h2>Sorry but you cannot pass this course :(</h2>}\n                {!this.state.valid && <h2>Your Exam and course work weighting must add up to 100!</h2>}\n                <form onSubmit={this.saveCourse}>\n                    <label style={{color: \"white\"}}>\n                        Course Name:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"string\"\n                            required\n                            disabled={this.state.saved}\n                            defaultValue={this.state.course.name}\n                            onChange={this.onNameChange}\n                        />\n                    </label>\n                    <div style={{height: '25px'}}/>\n                    <label style={{color: \"white\"}}>\n                        Term grade:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={this.numberInputProps}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            disabled={true}\n                            value={this.state.course.grade.toString()}\n                            onChange={this.onGradeChange}\n                        />\n                    </label>\n                    <div style={{height: '25px'}}/>\n                    <label style={{color: \"white\"}}>\n                        Enter your exam weighting:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={this.numberInputProps}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            defaultValue={this.state.course.percentage.toString()}\n                            onChange={this.onPercentageChange}\n                        />\n                        %\n                    </label>\n                    <div style={{height: '15px'}}/>\n                    <Button style={{backgroundColor: 'white'}}\n                            onClick={() => this.setState({...this.state, editing: [...this.state.editing, {}]})}\n                            color=\"secondary\">Add Course Work</Button>\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} onClick={this.onSubmit}\n                            color=\"secondary\">Calculate</Button>\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} type=\"submit\"\n                            color=\"secondary\">Save</Button>\n                </form>\n                {this.state.editing.length !== 0 &&\n                <div style={{backgroundColor: 'white', height: '1px', marginTop: '5px'}}/>}\n                {this.state.editing.map((e, index) => (\n                    <GradeComponent\n                        key={index}\n                        editing={true}\n                        course={{\n                            name: '',\n                            grade: 0,\n                            mark: 0,\n                            outOf: 0,\n                            percentage: 0.0\n                        }}\n                        cancelCallback={this.cancelCallback(index)}\n                        callback={this.newCourseWorkCallback(index)}\n                    />\n                ))}\n                {(this.state.editing.length !== 0 || this.state.course.courseWork.length !== 0) &&\n                <div style={{backgroundColor: 'white', height: '1px', marginTop: '5px'}}/>}\n                {this.state.course.courseWork.length !== 0 &&\n                <h4>Course Work</h4>}\n                {this.state.course.courseWork.map((e, index) => (\n                    <GradeComponent\n                        key={index + 1}\n                        index={index + 1}\n                        course={{...e}}\n                        editing={false}\n                        cancelCallback={null}\n                        deleteCallback={this.deleteCallback(index)}\n                        callback={this.updateCourseWorkCallback(index)}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    let courseName = state.course.map(e => e.name);\n    if (ownProps.location.state && ownProps.location.state.course) {\n        let course = state.course.find(e => e.name === ownProps.location.state.course.name);\n        return {courseName, course};\n    }\n    return {courseName}\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // dispatching actions returned by action creators\n        addCourse: (data) => dispatch({\n            course: {\n                name: data.name,\n                grade: data.grade,\n                percentage: data.percentage,\n                needed: data.needed,\n                courseWork: data.courseWork,\n            }, type: 'addCourse'\n        }),\n\n        updateCourse: (data) => dispatch({\n            course: {\n                name: data.name,\n                grade: data.grade,\n                percentage: data.percentage,\n                needed: data.needed,\n                courseWork: data.courseWork\n            }, type: 'updateCourse'\n        })\n    }\n};\n\nexport default withStyles(styles)(withRouter(connect(mapStateToProps, mapDispatchToProps)(CalculatorPage)));\n","import React from 'react';\nimport './App.css';\nimport MainPage from \"./pages/MainPage\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CalculatorPage from \"./pages/CalculatorPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route path='/course' >\n                    <CalculatorPage/>\n                </Route>\n                <Route path='/'>\n                    <MainPage/>\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import {createStore} from 'redux'\nimport {Cookies} from 'react-cookie'\n\nconst cookies = new Cookies();\n\nconst initialState = {\n    course: cookies.get('course') ? cookies.get('course') : []\n};\n\n\nlet reducers = function (state = initialState, action) {\n    switch (action.type) {\n        case 'addCourse':\n            let newCourses = [...state.course];\n            newCourses.push(action.course);\n            let newState1 = {\n                ...state,\n                course: newCourses\n            };\n            cookies.set('course', JSON.stringify(newState1.course));\n            return newState1;\n        case 'updateCourse':\n            let courses = [...state.course];\n            let ind = courses.findIndex(e => e.name === action.course.name);\n            courses[ind] = action.course;\n            let newState2 = {\n                ...state,\n                course: courses\n            };\n            cookies.set('course', JSON.stringify(newState2.course));\n            return newState2;\n        case 'removeCourse':\n            let courses1 = [...state.course];\n            courses1.splice(action.index, 1);\n            let newState3 = {\n                ...state,\n                course: courses1\n            };\n            cookies.set('course', JSON.stringify(newState3.course));\n            return newState3;\n        default:\n            return state;\n    }\n};\n\nexport default createStore(reducers);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./helper/store\";\nimport * as serviceWorker from './serviceWorker';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: grey[50]\n        },\n        secondary: {\n            main: grey[900]\n        }\n    },\n    status: {\n        danger: 'red',\n    },\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </MuiThemeProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}