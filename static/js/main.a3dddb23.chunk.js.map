{"version":3,"sources":["components/CourseComponent.js","pages/MainPage.js","helper/calculator.js","components/GradeComponent.js","pages/CalculatorPage.js","App.js","helper/store.js","serviceWorker.js","index.js"],"names":["CourseComponent","props","history","useHistory","style","margin","textAlign","paddingLeft","Button","color","backgroundColor","width","marginRight","onClick","push","pathname","state","course","name","marginTop","callback","MainPage","removeCallback","index","removeCourse","padding","height","this","map","e","ind","key","length","Component","withRouter","connect","dispatch","data","type","calculator","calculateRequired","termGrade","examPercentage","gradeWanted","div","needed","Math","ceil","calculateGrade","mark","outOf","round","GradeComponent","onMarkChange","isNaN","parseInt","target","value","setState","onOutOfChange","onPercentageChange","percentage","onSubmit","preventDefault","grade","editing","id","onNameChange","marginLeft","deleteCallback","TextField","inputProps","className","classes","input","InputLabelProps","label","required","defaultValue","onChange","step","min","max","toString","cancelCallback","withStyles","CalculatorPage","perValid","dirty","nameValid","courseWork","reduce","a","b","newCourse","valid","calculated","newCourseWorkCallback","newEditing","newCourseWork","genKey","splice","total","updateCourseWorkCallback","saveCourse","saved","addCourse","updateCourse","Date","valueOf","random","forEach","undefined","numberInputProps","goBack","position","left","top","error","disabled","onGradeChange","ownProps","courseName","location","find","App","path","cookies","Cookies","initialState","get","createStore","action","newCourses","newState1","set","JSON","stringify","courses","findIndex","newState2","courses1","newState3","Boolean","window","hostname","match","theme","createMuiTheme","palette","primary","main","grey","secondary","status","danger","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3dddb23.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction CourseComponent(props) {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div style={{margin: '10px', textAlign: 'center', paddingLeft: '6%'}}>\r\n            <Button\r\n                color='secondary'\r\n                style={{backgroundColor: 'white', width: '155px', marginRight: '10px'}}\r\n                onClick={() => history.push({\r\n                    pathname: '/course',\r\n                    state: {course: props.course}\r\n                })}>{props.course.name}</Button>\r\n            <Button style={{marginTop: '5px', color: '#A0A0A0'}} onClick={() => props.callback()}>Delete</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseComponent;\r\n","import React, {Component} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport CourseComponent from \"../components/CourseComponent\";\r\n\r\nclass MainPage extends Component {\r\n\r\n    onClick = () => {\r\n        this.props.history.push('/course')\r\n    };\r\n\r\n    removeCallback = (index) => () => {\r\n        this.props.removeCourse(index)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{padding: '2vh'}}>\r\n                <div style={{height: '25vh'}}/>\r\n                <h2>I Want To Pass</h2>\r\n                <p>Calculate how much you need to get on the final exam to pass a course :)</p>\r\n                <Button color=\"primary\" onClick={this.onClick}>Add a new course</Button>\r\n                <h3>Saved courses</h3>\r\n                {this.props.course.map((e, ind) => (\r\n                    <CourseComponent key={ind} callback={this.removeCallback(ind)} course={e}/>))}\r\n                {this.props.course.length === 0 && 'No saved course at the moment...'}\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeCourse: (data) => dispatch({index: data, type: 'removeCourse'})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainPage));\r\n","let calculator = {\r\n    calculateRequired: (termGrade, examPercentage, gradeWanted) => {\r\n        examPercentage = examPercentage / 100;\r\n        let div = examPercentage;\r\n        if (div === 0) {\r\n            if (termGrade >= 50) {\r\n                return 0;\r\n            }\r\n            return -1;\r\n        }\r\n        let needed = Math.ceil((gradeWanted - termGrade * (1 - examPercentage)) / (div));\r\n        if (needed > 100.0) {\r\n            return -1;\r\n        } else if (needed < 0.0) {\r\n            return 0;\r\n        }\r\n        return needed;\r\n    },\r\n    calculateGrade: (mark, outOf) => {\r\n        if (outOf === 0) {\r\n            return 0;\r\n        }\r\n        return Math.round(mark * 100 / outOf);\r\n    }\r\n};\r\n\r\nexport default calculator\r\n","import React, {Component} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport calculator from \"../helper/calculator\";\r\n\r\nconst styles = {\r\n    input: {\r\n        color: 'white'\r\n    },\r\n    label: {\r\n        color: 'white'\r\n    }\r\n};\r\n\r\nclass GradeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.props.course,\r\n            editing: this.props.editing\r\n        }\r\n    }\r\n\r\n    onMarkChange = (e) => {\r\n        if (isNaN(parseInt(e.target.value))) {\r\n            return\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            mark: parseInt(e.target.value),\r\n        })\r\n    };\r\n\r\n    onOutOfChange = (e) => {\r\n        if (isNaN(parseInt(e.target.value))) {\r\n            return\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            outOf: parseInt(e.target.value),\r\n        })\r\n    };\r\n\r\n    onPercentageChange = (e) => {\r\n        if (e.target.value > 100 || e.target.value < 0) {\r\n            return;\r\n        }\r\n        if (isNaN(parseInt(e.target.value))) {\r\n            return\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            percentage: parseInt(e.target.value),\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        let grade = calculator.calculateGrade(this.state.mark, this.state.outOf);\r\n        this.setState({\r\n            ...this.state,\r\n            grade,\r\n            editing: false\r\n        });\r\n        this.props.callback({\r\n            name: this.state.name,\r\n            grade,\r\n            mark: this.state.mark,\r\n            outOf: this.state.outOf,\r\n            percentage: this.state.percentage,\r\n            id: this.state.id\r\n        });\r\n    };\r\n\r\n    onNameChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            name: e.target.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: '15px'}}>\r\n                {!this.state.editing && <div style={{paddingLeft: '50px'}}>\r\n                    {this.props.index}. Name: {this.state.name}, Grade: {this.state.grade},\r\n                    Weighting: {this.state.percentage}%\r\n                    <Button style={{marginLeft:'5px', marginRight:'5px', color: '#A0A0A0'}} onClick={() => this.setState({...this.state, editing: true})}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button style={{color: '#A0A0A0'}} onClick={() => this.props.deleteCallback()}>\r\n                        Delete\r\n                    </Button>\r\n                </div>}\r\n                {this.state.editing && <form onSubmit={this.onSubmit}>\r\n                    <label style={{color: \"white\"}}>\r\n                        Name:\r\n                        <TextField\r\n                            style={{marginLeft: \"15px\"}}\r\n                            inputProps={{\r\n                                className: this.props.classes.input,\r\n                            }}\r\n                            InputLabelProps={{\r\n                                className: this.props.classes.label\r\n                            }}\r\n                            type=\"string\"\r\n                            required\r\n                            defaultValue={this.props.course.name}\r\n                            onChange={this.onNameChange}\r\n                        />\r\n                    </label>\r\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\r\n                        Mark:\r\n                        <TextField\r\n                            style={{width: '50px', marginLeft: \"5px\"}}\r\n                            inputProps={{\r\n                                className: this.props.classes.input,\r\n                                step: 'any',\r\n                                min: 0,\r\n                                max: this.state.outOf\r\n                            }}\r\n                            InputLabelProps={{\r\n                                className: this.props.classes.label\r\n                            }}\r\n                            type=\"number\"\r\n                            required\r\n                            defaultValue={this.props.course.mark.toString()}\r\n                            onChange={this.onMarkChange}\r\n                        />\r\n                    </label>\r\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\r\n                        Out Of:\r\n                        <TextField\r\n                            style={{width: '50px', marginLeft: \"5px\"}}\r\n                            inputProps={{\r\n                                className: this.props.classes.input,\r\n                                min: 1,\r\n                                step: 'any'\r\n                            }}\r\n                            InputLabelProps={{\r\n                                className: this.props.classes.label\r\n                            }}\r\n                            type=\"number\"\r\n                            required\r\n                            defaultValue={this.props.course.outOf.toString()}\r\n                            onChange={this.onOutOfChange}\r\n                        />\r\n                    </label>\r\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\r\n                        Weighting:\r\n                        <TextField\r\n                            style={{width: '50px', marginLeft: \"5px\"}}\r\n                            inputProps={{\r\n                                className: this.props.classes.input,\r\n                                step: 'any',\r\n                                min: 1,\r\n                                max: 100\r\n                            }}\r\n                            InputLabelProps={{\r\n                                className: this.props.classes.label\r\n                            }}\r\n                            type=\"number\"\r\n                            required\r\n                            defaultValue={this.props.course.percentage.toString()}\r\n                            onChange={this.onPercentageChange}\r\n                        />\r\n                        %\r\n                    </label>\r\n                    <Button style={{backgroundColor: 'white', marginLeft: '10px'}} type=\"submit\"\r\n                            color=\"secondary\">Save</Button>\r\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}}\r\n                            onClick={() => this.props.cancelCallback ?\r\n                                this.props.cancelCallback() :\r\n                                this.setState({...this.props.course, editing: false})}\r\n                            color=\"secondary\">Cancel</Button>\r\n                </form>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(GradeComponent);\r\n","import React, {Component} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport calculator from \"../helper/calculator\";\r\nimport GradeComponent from \"../components/GradeComponent\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst styles = {\r\n    input: {\r\n        color: 'white'\r\n    },\r\n    label: {\r\n        color: 'white'\r\n    }\r\n};\r\n\r\n\r\nclass CalculatorPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let course = this.props.course;\r\n        if (course) {\r\n            course.courseWork.forEach(e => e.id = this.genKey());\r\n        }\r\n        this.state = {\r\n            course: course ? course : {\r\n                name: '',\r\n                grade: 0,\r\n                percentage: 0.0,\r\n                needed: 0,\r\n                courseWork: []\r\n            },\r\n            perValid: true,\r\n            nameValid: true,\r\n            valid: true,\r\n            editing: [],\r\n            calculated: false,\r\n            dirty: false,\r\n            saved: !(course === undefined || course === null)\r\n        };\r\n        this.numberInputProps = {\r\n            className: this.props.classes.input,\r\n            step: 'any',\r\n            min: 0,\r\n            max: 100\r\n        };\r\n    }\r\n\r\n    onPercentageChange = (e) => {\r\n        if (isNaN(parseInt(e.target.value))) {\r\n            this.setState({\r\n                ...this.state,\r\n                perValid: false,\r\n                dirty: true\r\n            });\r\n            return;\r\n        }\r\n        if (parseInt(e.target.value) > 100 || parseInt(e.target.value) < 0) {\r\n            this.setState({\r\n                ...this.state,\r\n                perValid: false,\r\n                dirty: true\r\n            });\r\n            return;\r\n        }\r\n        let course = {...this.state.course, percentage: parseInt(e.target.value)};\r\n        this.setState({\r\n            ...this.state,\r\n            course,\r\n            perValid: true,\r\n            dirty: true\r\n        })\r\n    };\r\n    onNameChange = (e) => {\r\n        if (e.target.value === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                nameValid: false,\r\n                dirty: true\r\n            });\r\n            return;\r\n        }\r\n        let course = {...this.state.course, name: e.target.value};\r\n        this.setState({\r\n            ...this.state,\r\n            course,\r\n            nameValid: true,\r\n            dirty: true\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        let valid = this.state.course.courseWork.reduce((a, b) => a + b.percentage, 0) + this.state.course.percentage === 100;\r\n        if (!valid) {\r\n            this.setState({\r\n                ...this.state,\r\n                valid: false,\r\n                calculated: true\r\n            });\r\n            return;\r\n        }\r\n        let course = this.state.course;\r\n        let needed = calculator.calculateRequired(course.grade, course.percentage, 50);\r\n        let newCourse = {...course, needed};\r\n        this.setState({\r\n            ...this.state,\r\n            course: newCourse,\r\n            valid: true,\r\n            calculated: true,\r\n            dirty: this.state.dirty || needed !== this.state.course.needed\r\n        })\r\n    };\r\n\r\n    newCourseWorkCallback = (index) => (courseWork) => {\r\n        let newEditing = [...this.state.editing];\r\n        let newCourseWork = [...this.state.course.courseWork];\r\n        courseWork.id = this.genKey();\r\n        newCourseWork.push(courseWork);\r\n        newEditing.splice(index, 1);\r\n        let course = {...this.state.course};\r\n        course.courseWork = newCourseWork;\r\n        let total = course.courseWork.reduce((a, b) => a + b.percentage, 0);\r\n        let grade = newCourseWork.reduce((a, b) => a + b.grade * b.percentage, 0) / total;\r\n        if (isNaN(grade)) {\r\n            course.grade = 0;\r\n        } else {\r\n            course.grade = Math.round(grade);\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            course,\r\n            editing: newEditing,\r\n            dirty: true\r\n        });\r\n    };\r\n\r\n    updateCourseWorkCallback = (index) => (courseWork) => {\r\n        let newCourseWork = [...this.state.course.courseWork];\r\n        newCourseWork[index] = courseWork;\r\n        let course = {...this.state.course};\r\n        course.courseWork = newCourseWork;\r\n        let total = course.courseWork.reduce((a, b) => a + b.percentage, 0);\r\n        let grade = newCourseWork.reduce((a, b) => a + b.grade * b.percentage, 0) / total;\r\n        if (isNaN(grade)) {\r\n            course.grade = 0;\r\n        } else {\r\n            course.grade = Math.round(grade);\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            course,\r\n            dirty: true\r\n        });\r\n    };\r\n\r\n    deleteCallback = (index) => () => {\r\n        let newCourseWork = [...this.state.course.courseWork];\r\n        newCourseWork.splice(index, 1);\r\n        let course = {...this.state.course};\r\n        course.courseWork = newCourseWork;\r\n        let total = course.courseWork.reduce((a, b) => a + b.percentage, 0);\r\n        let grade = newCourseWork.reduce((a, b) => a + b.grade * b.percentage, 0) / total;\r\n        if (isNaN(grade)) {\r\n            course.grade = 0;\r\n        } else {\r\n            course.grade = Math.round(grade);\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            course,\r\n            dirty: true\r\n        });\r\n    };\r\n\r\n    saveCourse = () => {\r\n        if (this.state.course.name === '') {\r\n            this.setState({\r\n                ...this.state,\r\n                nameValid: false\r\n            });\r\n            return;\r\n        }\r\n        if (!this.state.perValid || !this.state.nameValid) {\r\n            return;\r\n        }\r\n        let needToSave = !this.state.saved;\r\n        needToSave ? this.props.addCourse(this.state.course) : this.props.updateCourse(this.state.course);\r\n        this.setState({\r\n            ...this.state,\r\n            saved: true,\r\n            dirty: false\r\n        });\r\n    };\r\n\r\n    cancelCallback = index => () => {\r\n        let newEditing = [...this.state.editing];\r\n        newEditing.splice(index, 1);\r\n        this.setState({\r\n            ...this.state,\r\n            editing: newEditing\r\n        });\r\n    };\r\n\r\n    genKey = () => new Date().valueOf() * Math.random();\r\n\r\n    render() {\r\n        return (\r\n            <div style={{padding: '2vh'}}>\r\n                <div style={{textAlign: 'right'}}>\r\n                    {(!this.state.saved || this.state.dirty) && 'Unsaved Changes'}\r\n                    <Button\r\n                        color='secondary'\r\n                        onClick={() => this.props.history.goBack()}\r\n                        style={{backgroundColor: 'white', margin: '10px'}}>\r\n                        Back To Main Page\r\n                    </Button>\r\n                </div>\r\n                {this.state.calculated && <div style={{\r\n                    width: '100vw',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    top: this.state.valid && this.state.course.needed === 0 ? '20vh' : '23vh'\r\n                }}>\r\n                    {this.state.valid && this.state.course.needed >= 0 &&\r\n                    <h2>You need {this.state.course.needed}% on the exam to pass the course</h2>}\r\n                    {this.state.valid && this.state.course.needed === 0 &&\r\n                    <h2>Congrats! You've passed the course!</h2>}\r\n                    {this.state.valid && this.state.course.needed === -1\r\n                    && <h2>Sorry but you cannot pass this course :(</h2>}\r\n                    {!this.state.valid && <h2>Your Exam and course work weighting must add up to 100!</h2>}\r\n                </div>}\r\n                <div style={{height: '25vh'}}/>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <label style={{color: \"white\"}}>\r\n                        Course Name:\r\n                        <TextField\r\n                            style={{marginLeft: \"15px\"}}\r\n                            inputProps={{\r\n                                className: this.props.classes.input,\r\n                            }}\r\n                            InputLabelProps={{\r\n                                className: this.props.classes.label\r\n                            }}\r\n                            type=\"string\"\r\n                            error={!this.state.nameValid}\r\n                            disabled={this.state.saved}\r\n                            defaultValue={this.state.course.name}\r\n                            onChange={this.onNameChange}\r\n                        />\r\n                    </label>\r\n                    <div style={{height: '25px'}}/>\r\n                    <label style={{color: \"white\"}}>\r\n                        Term grade:\r\n                        <TextField\r\n                            style={{marginLeft: \"15px\"}}\r\n                            inputProps={{\r\n                                className: this.props.classes.input,\r\n                            }}\r\n                            InputLabelProps={{\r\n                                className: this.props.classes.label\r\n                            }}\r\n                            type=\"string\"\r\n                            required\r\n                            disabled={true}\r\n                            value={this.state.course.grade.toString()}\r\n                            onChange={this.onGradeChange}\r\n                        />\r\n                    </label>\r\n                    <div style={{height: '25px'}}/>\r\n                    <label style={{color: \"white\"}}>\r\n                        Enter your exam weighting:\r\n                        <TextField\r\n                            style={{marginLeft: \"15px\"}}\r\n                            inputProps={this.numberInputProps}\r\n                            InputLabelProps={{\r\n                                className: this.props.classes.label\r\n                            }}\r\n                            type=\"number\"\r\n                            required\r\n                            error={!this.state.perValid}\r\n                            defaultValue={this.state.course.percentage.toString()}\r\n                            onChange={this.onPercentageChange}\r\n                        />\r\n                        %\r\n                    </label>\r\n                    <div style={{height: '15px'}}/>\r\n                    <Button style={{backgroundColor: 'white'}}\r\n                            onClick={() => this.setState({\r\n                                ...this.state, editing: [...this.state.editing, this.genKey()]\r\n                            })}\r\n                            color=\"secondary\">Add Course Work</Button>\r\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} type=\"submit\"\r\n                            color=\"secondary\">Calculate</Button>\r\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} onClick={this.saveCourse}\r\n                            color=\"secondary\">Save</Button>\r\n                </form>\r\n                {this.state.editing.length !== 0 &&\r\n                <div style={{backgroundColor: 'white', height: '1px', marginTop: '5px'}}/>}\r\n                {this.state.editing.map((e, index) => (\r\n                    <GradeComponent\r\n                        key={e}\r\n                        editing={true}\r\n                        course={{\r\n                            name: '',\r\n                            grade: 0,\r\n                            mark: 0,\r\n                            outOf: 0,\r\n                            percentage: 0.0,\r\n                        }}\r\n                        cancelCallback={this.cancelCallback(index)}\r\n                        callback={this.newCourseWorkCallback(index)}\r\n                    />\r\n                ))}\r\n                {(this.state.editing.length !== 0 || this.state.course.courseWork.length !== 0) &&\r\n                <div style={{backgroundColor: 'white', height: '1px', marginTop: '5px'}}/>}\r\n                {this.state.course.courseWork.length !== 0 &&\r\n                <h4>Course Work</h4>}\r\n                {this.state.course.courseWork.map((e, index) => (\r\n                    <GradeComponent\r\n                        key={e.id}\r\n                        index={index + 1}\r\n                        course={{...e}}\r\n                        editing={false}\r\n                        cancelCallback={null}\r\n                        deleteCallback={this.deleteCallback(index)}\r\n                        callback={this.updateCourseWorkCallback(index)}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let courseName = state.course.map(e => e.name);\r\n    if (ownProps.location.state && ownProps.location.state.course) {\r\n        let course = state.course.find(e => e.name === ownProps.location.state.course.name);\r\n        return {courseName, course};\r\n    }\r\n    return {courseName}\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // dispatching actions returned by action creators\r\n        addCourse: (data) => dispatch({\r\n            course: {\r\n                name: data.name,\r\n                grade: data.grade,\r\n                percentage: data.percentage,\r\n                needed: data.needed,\r\n                courseWork: data.courseWork,\r\n            }, type: 'addCourse'\r\n        }),\r\n\r\n        updateCourse: (data) => dispatch({\r\n            course: {\r\n                name: data.name,\r\n                grade: data.grade,\r\n                percentage: data.percentage,\r\n                needed: data.needed,\r\n                courseWork: data.courseWork\r\n            }, type: 'updateCourse'\r\n        })\r\n    }\r\n};\r\n\r\nexport default withStyles(styles)(withRouter(connect(mapStateToProps, mapDispatchToProps)(CalculatorPage)));\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from \"./pages/MainPage\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport CalculatorPage from \"./pages/CalculatorPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Route path='/course'>\r\n                    <CalculatorPage/>\r\n                </Route>\r\n                <Route path='/'>\r\n                    <MainPage/>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {createStore} from 'redux'\r\nimport {Cookies} from 'react-cookie'\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst initialState = {\r\n    course: cookies.get('course') ? cookies.get('course') : []\r\n};\r\n\r\n\r\nlet reducers = function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'addCourse':\r\n            let newCourses = [...state.course];\r\n            newCourses.push(action.course);\r\n            let newState1 = {\r\n                ...state,\r\n                course: newCourses\r\n            };\r\n            cookies.set('course', JSON.stringify(newState1.course));\r\n            return newState1;\r\n        case 'updateCourse':\r\n            let courses = [...state.course];\r\n            let ind = courses.findIndex(e => e.name === action.course.name);\r\n            courses[ind] = action.course;\r\n            let newState2 = {\r\n                ...state,\r\n                course: courses\r\n            };\r\n            cookies.set('course', JSON.stringify(newState2.course));\r\n            return newState2;\r\n        case 'removeCourse':\r\n            let courses1 = [...state.course];\r\n            courses1.splice(action.index, 1);\r\n            let newState3 = {\r\n                ...state,\r\n                course: courses1\r\n            };\r\n            cookies.set('course', JSON.stringify(newState3.course));\r\n            return newState3;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default createStore(reducers);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./helper/store\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {MuiThemeProvider} from \"@material-ui/core\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: grey[50]\r\n        },\r\n        secondary: {\r\n            main: grey[900]\r\n        }\r\n    },\r\n    status: {\r\n        danger: 'red',\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}