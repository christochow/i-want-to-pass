{"version":3,"sources":["components/CourseComponent.js","pages/MainPage.js","helper/calculator.js","components/GradeComponent.js","pages/CalculatorPage.js","App.js","helper/store.js","serviceWorker.js","index.js"],"names":["CourseComponent","props","history","useHistory","style","margin","Button","color","backgroundColor","onClick","push","pathname","state","course","name","MainPage","padding","height","this","map","e","ind","key","Component","withRouter","connect","calculator","calculateRequired","termGrade","examPercentage","gradeWanted","needed","Math","ceil","calculateGrade","mark","outOf","round","GradeComponent","onMarkChange","isNaN","parseInt","target","value","setState","onOutOfChange","onPercentageChange","percentage","onSubmit","preventDefault","grade","editing","callback","onNameChange","index","deleteCallback","TextField","marginLeft","inputProps","className","classes","input","InputLabelProps","label","type","required","defaultValue","onChange","width","step","min","max","toString","withStyles","CalculatorPage","dirty","courseWork","reduce","a","b","newCourse","saved","valid","calculated","newCourseWorkCallback","newEditing","newCourseWork","unshift","splice","total","updateCourseWorkCallback","saveCourse","addCourse","updateCourse","undefined","numberInputProps","textAlign","goBack","disabled","onGradeChange","length","marginTop","ownProps","courseName","location","find","dispatch","data","App","path","cookies","Cookies","initialState","get","createStore","action","newCourses","newState1","set","JSON","stringify","courses","findIndex","newState2","Boolean","window","hostname","match","theme","createMuiTheme","palette","primary","main","grey","secondary","status","danger","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5126dda3.chunk.js","sourcesContent":["import React from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction CourseComponent(props) {\n    let history = useHistory();\n\n    return (\n        <div style={{margin: '10px'}}>\n            <Button\n                color='secondary'\n                style={{backgroundColor: 'white'}}\n                onClick={() => history.push({\n                    pathname: '/course',\n                    state: {course: props.course}\n                })}>{props.course.name}</Button>\n        </div>\n    );\n}\n\nexport default CourseComponent;\n","import React, {Component} from 'react';\nimport {Button} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport CourseComponent from \"../components/CourseComponent\";\n\nclass MainPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    onClick = () => {\n        this.props.history.push('/course')\n    };\n\n    render() {\n        return (\n            <div style={{padding:'2vh'}}>\n                <div style={{height: '25vh'}}/>\n                <h2>I Want To Pass</h2>\n                <Button color=\"primary\" onClick={this.onClick}>Add a new course</Button>\n                <h3>Saved courses</h3>\n                {this.props.course.map((e,ind) => (<CourseComponent key={ind} course={e}/>))}\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default withRouter(connect(mapStateToProps)(MainPage));\n","let calculator = {\n        calculateRequired: (termGrade, examPercentage, gradeWanted) => {\n            examPercentage = examPercentage/100;\n            let needed =  Math.ceil((gradeWanted-termGrade*(1-examPercentage))/(examPercentage));\n            if(needed>100.0){\n                return -1;\n            }\n            return needed;\n        },\n        calculateGrade: (mark, outOf) => {\n            if(outOf===0){\n                return 0;\n            }\n            return Math.round(mark*100/outOf);\n        }\n    };\n\nexport default calculator\n","import React, {Component} from 'react';\nimport {TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport calculator from \"../helper/calculator\";\n\nconst styles = {\n    input: {\n        color: 'white'\n    },\n    label: {\n        color: 'white'\n    }\n};\n\nclass GradeComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: this.props.course.name,\n            grade: this.props.course.grade,\n            mark: this.props.course.mark,\n            outOf: this.props.course.outOf,\n            percentage: this.props.course.percentage,\n            editing: this.props.editing\n        }\n    }\n\n    onMarkChange = (e) => {\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        this.setState({\n            ...this.state,\n            mark: parseInt(e.target.value),\n        })\n    };\n\n    onOutOfChange = (e) => {\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        this.setState({\n            ...this.state,\n            outOf: parseInt(e.target.value),\n        })\n    };\n\n    onPercentageChange = (e) => {\n        if (e.target.value > 100 || e.target.value < 0) {\n            return;\n        }\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        this.setState({\n            ...this.state,\n            percentage: parseInt(e.target.value),\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        let grade = calculator.calculateGrade(this.state.mark, this.state.outOf);\n        this.setState({\n            ...this.state,\n            grade,\n            editing: false\n        });\n        this.props.callback({\n            name: this.state.name,\n            grade,\n            mark: this.state.mark,\n            outOf: this.state.outOf,\n            percentage: this.state.percentage\n        });\n    };\n\n    onNameChange = (e) => {\n        this.setState({\n            ...this.state,\n            name: e.target.value\n        })\n    };\n\n    render() {\n        return (\n            <div style={{margin: '15px'}}>\n                {!this.state.editing && <div>\n                    {this.props.index}. {this.state.name}, Grade: {this.state.grade}, worth {this.state.percentage}%\n                    <Button onClick={() => this.setState({...this.state, editing: true})}>\n                        Edit\n                    </Button>\n                    <Button onClick={() => this.props.deleteCallback()}>\n                        Delete\n                    </Button>\n                </div>}\n                {this.state.editing && <form onSubmit={this.onSubmit}>\n                    <label style={{color: \"white\"}}>\n                        Name:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"string\"\n                            required\n                            defaultValue={this.props.course.name}\n                            onChange={this.onNameChange}\n                        />\n                    </label>\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\n                        Mark:\n                        <TextField\n                            style={{width: '50px', marginLeft: \"5px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                                step: 'any',\n                                min: 0,\n                                max: this.state.outOf\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            defaultValue={this.props.course.mark.toString()}\n                            onChange={this.onMarkChange}\n                        />\n                    </label>\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\n                        Out Of:\n                        <TextField\n                            style={{width: '50px', marginLeft: \"5px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                                min: 1,\n                                step: 'any'\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            defaultValue={this.props.course.outOf.toString()}\n                            onChange={this.onOutOfChange}\n                        />\n                    </label>\n                    <label style={{color: \"white\", marginLeft: \"15px\"}}>\n                        Worth:\n                        <TextField\n                            style={{width: '50px', marginLeft: \"5px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                                step: 'any',\n                                min: 1,\n                                max: 100\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            defaultValue={this.props.course.percentage.toString()}\n                            onChange={this.onPercentageChange}\n                        />\n                        %\n                    </label>\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} type=\"submit\"\n                            color=\"secondary\">Save</Button>\n                </form>}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(GradeComponent);\n","import React, {Component} from 'react';\nimport {TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport calculator from \"../helper/calculator\";\nimport GradeComponent from \"../components/GradeComponent\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst styles = {\n    input: {\n        color: 'white'\n    },\n    label: {\n        color: 'white'\n    }\n};\n\n\nclass CalculatorPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: this.props.course ? this.props.course : {\n                name: '',\n                grade: 0,\n                percentage: 0.0,\n                needed: 0,\n                courseWork: []\n            },\n            valid: true,\n            editing: [],\n            calculated: false,\n            dirty: false,\n            saved: !(this.props.course === undefined)\n        };\n        this.numberInputProps = {\n            className: this.props.classes.input,\n            step: 'any',\n            min: 0,\n            max: 100\n        };\n    }\n\n    onPercentageChange = (e) => {\n        if (e.target.value > 100 || e.target.value < 0) {\n            return;\n        }\n        if (isNaN(parseInt(e.target.value))) {\n            return\n        }\n        let course = {...this.state.course, percentage: parseInt(e.target.value)};\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        })\n    };\n    onNameChange = (e) => {\n        let course = {...this.state.course, name: e.target.value};\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        })\n    };\n\n    onSubmit = () => {\n        let valid = this.state.course.courseWork.reduce((a, b) => a + b.percentage, 0) + this.state.course.percentage === 100;\n        if (!valid) {\n            this.setState({\n                ...this.state,\n                valid: false,\n                calculated: true\n            });\n            return;\n        }\n        let course = this.state.course;\n        let needed = calculator.calculateRequired(course.grade, course.percentage, 50);\n        let newCourse = {...course, needed};\n        this.setState({\n            ...this.state,\n            course: newCourse,\n            saved: true,\n            valid: true,\n            calculated: true,\n            dirty: true\n        })\n    };\n\n    newCourseWorkCallback = (index) => (courseWork) => {\n        let newEditing = [...this.state.editing];\n        let newCourseWork = [...this.state.course.courseWork];\n        newCourseWork.unshift(courseWork);\n        newEditing.splice(index, 1);\n        let course = {...this.state.course};\n        course.courseWork = newCourseWork;\n        let total = course.courseWork.reduce((a, b) => a + b.percentage, 0);\n        let grade = newCourseWork.reduce((a,b)=>a+b.grade*b.percentage,0)/total;\n        if(!isNaN(grade)){\n            course.grade = Math.round(grade);\n        }\n        this.setState({\n            ...this.state,\n            course,\n            editing: newEditing,\n            dirty: true\n        });\n    };\n\n    updateCourseWorkCallback = (index) => (courseWork) => {\n        let newCourseWork = [...this.state.course.courseWork];\n        newCourseWork[index] = courseWork;\n        let course = {...this.state.course};\n        course.courseWork = newCourseWork;\n        let total = course.courseWork.reduce((a, b) => a + b.percentage, 0);\n        let grade = newCourseWork.reduce((a,b)=>a+b.grade*b.percentage,0)/total;\n        if(!isNaN(grade)){\n            course.grade = Math.round(grade);\n        }\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        });\n    };\n\n    deleteCallback = (index) => ()=>{\n        let newCourseWork = [...this.state.course.courseWork];\n        newCourseWork.splice(index,1);\n        let course = {...this.state.course};\n        course.courseWork = newCourseWork;\n        this.setState({\n            ...this.state,\n            course,\n            dirty: true\n        });\n    };\n\n    saveCourse = (e) => {\n        e.preventDefault();\n        let needToSave = !this.state.saved;\n        needToSave ? this.props.addCourse(this.state.course) : this.props.updateCourse(this.state.course);\n        this.setState({\n                ...this.state,\n                saved: true,\n                dirty: false\n        });\n    };\n\n    render() {\n        return (\n            <div style={{padding: '2vh'}}>\n                <div style={{textAlign: 'right'}}>\n                    {(!this.state.saved || this.state.dirty) && 'Unsaved Changes'}\n                    <Button\n                        color='secondary'\n                        onClick={() => this.props.history.goBack()}\n                        style={{backgroundColor: 'white', margin: '10px'}}>\n                        Back To Main Page\n                    </Button>\n                </div>\n                <div style={{height: '25vh'}}/>\n                {this.state.calculated && this.state.course.needed > 0 &&\n                <h2>You need {this.state.course.needed}% on the exam to pass the course</h2>}\n                {this.state.calculated && this.state.course.needed < 0\n                && <h2>Sorry but you cannot pass this course :(</h2>}\n                {!this.state.valid && <h2>Your Exam and course work worth must add up to 100!</h2>}\n                <form onSubmit={this.saveCourse}>\n                    <label style={{color: \"white\"}}>\n                        Course Name:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={{\n                                className: this.props.classes.input,\n                            }}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"string\"\n                            required\n                            disabled={this.state.saved}\n                            defaultValue={this.state.course.name}\n                            onChange={this.onNameChange}\n                        />\n                    </label>\n                    <div style={{height: '25px'}}/>\n                    <label style={{color: \"white\"}}>\n                        Term grade:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={this.numberInputProps}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            required\n                            disabled={true}\n                            value={this.state.course.grade.toString()}\n                            onChange={this.onGradeChange}\n                        />\n                    </label>\n                    <div style={{height: '25px'}}/>\n                    <label style={{color: \"white\"}}>\n                        Enter your exam weighting:\n                        <TextField\n                            style={{marginLeft: \"15px\"}}\n                            inputProps={this.numberInputProps}\n                            InputLabelProps={{\n                                className: this.props.classes.label\n                            }}\n                            type=\"number\"\n                            defaultValue={this.state.course.percentage.toString()}\n                            onChange={this.onPercentageChange}\n                        />\n                        %\n                    </label>\n                    <div style={{height: '15px'}}/>\n                    <Button style={{backgroundColor: 'white'}}\n                            onClick={() => this.setState({...this.state, editing: [...this.state.editing, {}]})}\n                            color=\"secondary\">Add Course Work</Button>\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} onClick={this.onSubmit}\n                            color=\"secondary\">Calculate</Button>\n                    <Button style={{backgroundColor: 'white', marginLeft: '5px'}} type=\"submit\"\n                            color=\"secondary\">Save</Button>\n                </form>\n                {this.state.editing.length !== 0 &&\n                <div style={{backgroundColor: 'white', height: '1px', marginTop: '5px'}}/>}\n                {this.state.editing.map((e, index) => (\n                    <GradeComponent\n                        key={index}\n                        editing={true}\n                        course={{\n                            name: '',\n                            grade: 0,\n                            mark: 0,\n                            outOf: 0,\n                            percentage: 0.0\n                        }}\n                        callback={this.newCourseWorkCallback(index)}\n                    />\n                ))}\n                {(this.state.editing.length !== 0 || this.state.course.courseWork.length !== 0) &&\n                <div style={{backgroundColor: 'white', height: '1px', marginTop: '5px'}}/>}\n                {this.state.course.courseWork.length !== 0 &&\n                <h4>Course Work</h4>}\n                {this.state.course.courseWork.map((e, index) => (\n                    <GradeComponent\n                        key={index+1}\n                        index={index+1}\n                        course={{...e}}\n                        editing={false}\n                        deleteCallback={this.deleteCallback(index)}\n                        callback={this.updateCourseWorkCallback(index)}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    let courseName = state.course.map(e => e.name);\n    if (ownProps.location.state && ownProps.location.state.course) {\n        let course = state.course.find(e => e.name === ownProps.location.state.course.name);\n        return {courseName, course};\n    }\n    return {courseName}\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // dispatching actions returned by action creators\n        addCourse: (data) => dispatch({\n            course: {\n                name: data.name,\n                grade: data.grade,\n                percentage: data.percentage,\n                needed: data.needed,\n                courseWork: data.courseWork,\n            }, type: 'addCourse'\n        }),\n\n        updateCourse: (data) => dispatch({\n            course: {\n                name: data.name,\n                grade: data.grade,\n                percentage: data.percentage,\n                needed: data.needed,\n                courseWork: data.courseWork\n            }, type: 'updateCourse'\n        })\n    }\n};\n\nexport default withStyles(styles)(withRouter(connect(mapStateToProps, mapDispatchToProps)(CalculatorPage)));\n","import React from 'react';\nimport './App.css';\nimport MainPage from \"./pages/MainPage\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CalculatorPage from \"./pages/CalculatorPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route path='/course' >\n                    <CalculatorPage/>\n                </Route>\n                <Route path='/'>\n                    <MainPage/>\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import {createStore} from 'redux'\nimport {Cookies} from 'react-cookie'\n\nconst cookies = new Cookies();\n\nconst initialState = {\n    course: cookies.get('course') ? cookies.get('course') : []\n};\n\n\nlet reducers = function (state = initialState, action) {\n    switch (action.type) {\n        case 'addCourse':\n            let newCourses = [...state.course];\n            newCourses.push(action.course);\n            let newState1 = {\n                ...state,\n                course: newCourses\n            };\n            cookies.set('course', JSON.stringify(newState1.course));\n            return newState1;\n        case 'updateCourse':\n            let courses = [...state.course];\n            let ind = courses.findIndex(e => e.name === action.course.name);\n            courses[ind] = action.course;\n            let newState2 = {\n                ...state,\n                course: courses\n            };\n            cookies.set('course', JSON.stringify(newState2.course));\n            return newState2;\n        default:\n            return state;\n    }\n};\n\nexport default createStore(reducers);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./helper/store\";\nimport * as serviceWorker from './serviceWorker';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: grey[50]\n        },\n        secondary: {\n            main: grey[900]\n        }\n    },\n    status: {\n        danger: 'red',\n    },\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </MuiThemeProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}